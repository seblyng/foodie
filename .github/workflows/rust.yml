name: Rust

on:
  push:
    branches: ["master"]
  pull_request:
    branches: ["master"]

env:
  CARGO_TERM_COLOR: always

jobs:
  frontend:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup Rust
        uses: ./.github/actions/setup_rust

      - name: Build frontend
        working-directory: frontend
        run: cargo build

  backend:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres

        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_USER: postgres
          POSTGRES_DB: postgres

        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup Rust
        uses: ./.github/actions/setup_rust

      - name: Build backend
        working-directory: backend
        run: cargo build

      - name: Run tests in backend
        working-directory: backend
        run: cargo test
        env:
          DATABASE_URL: postgres://postgres:postgres@localhost:5432/postgres
          # Dummy env-variables. Creates a client on setup, but doesn't use it in tests
          GOOGLE_CLIENT_ID: "foo"
          GOOGLE_CLIENT_SECRET: "foo"
          FRONTEND_URL: "https://example.com"
          BASE_URL: "https://example.com"
          AWS_URL: "https://example.com"
          AWS_USER: "foo"
          AWS_PASSWORD: "foo"

  deploy:
    if: github.ref == 'refs/heads/master'
    needs: [backend, frontend]
    runs-on: ubuntu-latest

    steps:
      - name: Configure 1Password Service Account
        uses: 1password/load-secrets-action/configure@v2
        with:
          service-account-token: ${{ secrets.OP_SERVICE_ACCOUNT_TOKEN }}

      - name: Load Credentials
        id: load-credentials
        uses: 1password/load-secrets-action@v2
        env:
          DATABASE_URL: op://foodie-production/DATABASE_URL/password

      - name: Deploy foodie
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.KEY }}
          port: ${{ secrets.PORT }}
          script: |
            export GOOGLE_CLIENT_ID="${{ secrets.GOOGLE_CLIENT_ID }}"
            export GOOGLE_CLIENT_SECRET="${{ secrets.GOOGLE_CLIENT_SECRET }}"
            export DATABASE_URL="${{ steps.load-credentials.outputs.DATABASE_URL }}"
            export AWS_USER="${{ secrets.AWS_USER }}"
            export AWS_PASSWORD="${{ secrets.AWS_PASSWORD }}"
            export REDIS_URL="${{ secrets.REDIS_URL }}"

            cd projects/foodie
            git pull
            ./deploy
